@model ProyectoFnalIntegrado.Models.Establishment

@{
    ViewData["Title"] = "Gestión de Establecimientos";
    Layout = "_Layout";

}

@section Styles {
    <link href="~/css/Form.css" rel="stylesheet" />

}

<div class="wave-container">
    <div class="wave"></div>
    <div class="wave"></div>
    <div class="wave"></div>
</div>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <!-- Cabecera del card -->
                <div class="card-header">
                    <h3>Gestión de Establecimientos</h3>
                </div>




                <div class="card-body">
                    <div class="row">
                        <!-- Columna del formulario -->
                        <div class="col-md-6">
                            <div class="form-container">
                                <form id="formEstablecimiento">
                                    <input type="hidden" id="id" name="Id" />

                                    <div class="form-group">
                                        <label for="name">Nombre:</label>
                                        <input type="text" id="name" name="Name" class="form-control" placeholder="Por favor ingresa datos correctos" />
                                    </div>

                                    <div class="form-group">
                                        <label for="schedule">Horario:</label>
                                        <input type="text" id="schedule" name="Schedule" class="form-control" />
                                    </div>

                                    <div class="form-group">
                                        <label for="zone">Zona:</label>
                                        <input type="text" id="zone" name="Zone" class="form-control" />
                                    </div>

                                    <div class="form-group">
                                        <label for="phone">Teléfono:</label>
                                        <input type="text" id="phone" name="Phone" class="form-control" maxlength="10" />
                                    </div>

                                    <div class="form-group">
                                        <label for="director">Director:</label>
                                        <input type="text" id="director" name="Director" class="form-control" />
                                    </div>

                                    <div class="form-group">
                                        <label for="ProvinceId">Provincia:</label>
                                        <select asp-for="ProvinceId" class="form-control" asp-items="ViewBag.Provinces">
                                            <option value="">Seleccionar provincia</option>
                                        </select>
                                    </div>

                                    <input type="hidden" id="latitude" name="Latitude" />
                                    <input type="hidden" id="longitude" name="Longitude" />

                                    <button type="submit" id="btnSave" class="btn btn-success">Guardar</button>
                                    <button type="button" id="btnClear" class="btn btn-secondary">Limpiar</button>
                                </form>
                            </div>
                        </div>

                        <!-- Columna del mapa -->
                        <div class="col-md-6">
                            <div id="myMap" class="map" style="width: 100%; height: 450px;"></div>
                            <button class="btn btn-primary mt-3" id="btnVerEstablecimientos" data-toggle="modal" data-target="#viewEstablishmentsModal">
                                Ver Establecimientos
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<div class="modal fade" id="viewEstablishmentsModal" tabindex="-1" role="dialog" aria-labelledby="viewEstablishmentsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewEstablishmentsModalLabel">Establecimientos Registrados</h5>
                <div class="input-group">
                    <input type="text" id="searchEstablishment" class="form-control" placeholder="Buscar por nombre">
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="max-height: 70vh; overflow-y: auto;">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Horario</th>
                            <th>Zona</th>
                            <th>Provincia</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="establishmentsTableBody"></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.all.min.js"></script>
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=ArQ2YhDzY85sAJsLwNVr-l2g0rU8A_brMU4FInQRfS3T6pX4ReAGGAWjZWGmYKPS&callback=GetMap' async defer></script>

    <script type="text/javascript">
        var map, currentZoom = 10, pin;

        function GetMap() {
            var initialLocation = new Microsoft.Maps.Location(-17.393525, -66.156801);
            map = new Microsoft.Maps.Map('#myMap', {
                credentials: 'ArQ2YhDzY85sAJsLwNVr-l2g0rU8A_brMU4FInQRfS3T6pX4ReAGGAWjZWGmYKPS',
                center: initialLocation,
                zoom: currentZoom
            });

            pin = new Microsoft.Maps.Pushpin(initialLocation, { title: 'Ubicación Inicial' });
            map.entities.push(pin);

            Microsoft.Maps.Events.addHandler(map, 'dblclick', function (e) {
                if (e.location) {
                    if (pin) {
                        map.entities.remove(pin);
                    }

                    pin = new Microsoft.Maps.Pushpin(e.location);
                    map.entities.push(pin);

                    $('#latitude').val(e.location.latitude);
                    $('#longitude').val(e.location.longitude);
                }
            });
        }

        $('#formEstablecimiento').submit(function (e) {
            e.preventDefault();


            const latitude = $('#latitude').val();
            const longitude = $('#longitude').val();

            if (!latitude || !longitude || latitude == 0 || longitude == 0) {
                Swal.fire({
                    icon: 'error',
                    title: '¡Error!',
                    text: 'Por favor selecciona una ubicación en el mapa antes de guardar.',
                });
                return;
            }


            var id = $('#id').val();
            var url = id ? '/Establishment/Edit/' + id : '/Establishment/Create';

            if (!id) {
                $('#id').prop('disabled', true);
            }

            $.ajax({
                url: url,
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            icon: 'success',
                            title: '¡Éxito!',
                            text: 'Operación realizada correctamente.',
                        });

                        $('#formEstablecimiento').trigger("reset");
                        $('#btnSave').text('Guardar');
                        $('#id').val('');
                        $('#id').prop('disabled', true);

                        loadEstablishments();
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: '¡Error!',
                            text: response.message,
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: '¡Error!',
                        text: 'Error al guardar el establecimiento.',
                    });
                }
            });
        });

        $(document).ready(function () {
            loadEstablishments();
        });

        function loadEstablishments() {
            $.ajax({
                url: '/Establishment/GetAllEstablishments',
                type: 'GET',
                success: function (data) {
                    var tbody = $('#establishmentsTableBody');
                    tbody.empty();

                    data.forEach(function (establishment) {
                        tbody.append('<tr>' +
                            '<td>' + establishment.name + '</td>' +
                            '<td>' + establishment.schedule + '</td>' +
                            '<td>' + establishment.zone + '</td>' +
                            '<td>' + establishment.provinceName + '</td>' +
                            '<td>' +
                            '<button class="btn btn-sm btn-primary" onclick="editEstablishment(' + establishment.id + ')">Editar</button> ' +
                            '<button class="btn btn-sm btn-danger" onclick="deleteEstablishment(' + establishment.id + ')">Eliminar</button>' +
                            '</td>' +
                            '</tr>');
                    });
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: '¡Error!',
                        text: 'Error al cargar los establecimientos.',
                    });
                }
            });
        }

        function editEstablishment(id) {
            $.ajax({
                url: '/Establishment/Edit/' + id,
                type: 'GET',
                success: function (data) {
                    $('#id').val(data.id);
                    $('#name').val(data.name);
                    $('#schedule').val(data.schedule);
                    $('#zone').val(data.zone);
                    $('#latitude').val(data.latitude);
                    $('#longitude').val(data.longitude);
                    $('#phone').val(data.phone);
                    $('#director').val(data.director);
                    $('#provinceId').val(data.provinceId);

                    $('#form-title').text('Editar Establecimiento');
                    $('#btnSave').text('Actualizar');

                    // Habilita el campo Id al editar
                    $('#id').prop('disabled', false);
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: '¡Error!',
                        text: 'No se pudo cargar el establecimiento para edición.',
                    });
                }
            });
        }

        function deleteEstablishment(id) {
            Swal.fire({
                title: '¿Seguro que deseas eliminar este establecimiento?',
                text: "Esta acción no se puede deshacer.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sí, eliminar!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Establishment/Delete/' + id,
                        type: 'POST',
                        success: function () {
                            Swal.fire(
                                'Eliminado!',
                                'El establecimiento ha sido eliminado.',
                                'success'
                            );
                            loadEstablishments();
                        },
                        error: function () {
                            Swal.fire({
                                icon: 'error',
                                title: '¡Error!',
                                text: 'No se pudo eliminar el establecimiento.',
                            });
                        }
                    });
                }
            });
        }

        $('#btnClear').click(function () {
            $('#formEstablecimiento').trigger("reset");
            $('#id').val('');
            $('#id').prop('disabled', true);
            $('#btnSave').text('Guardar');
        });

        $(document).ready(function () {
            $('#name, #schedule, #zone').on('input', function () {
                this.value = this.value.replace(/[^a-zA-ZñÑáéíóúÁÉÍÓÚ\s]/g, '');
            });

            $('#latitude, #longitude').attr('readonly', true);

            $('#phone').on('input', function () {
                this.value = this.value.replace(/[^0-9]/g, '').slice(0, 8);
            });

            $('#director').on('input', function () {
                this.value = this.value.replace(/[^a-zA-ZñÑáéíóúÁÉÍÓÚ\s]/g, '');
            });

            loadEstablishments();

            $('#formEstablecimiento').submit(function (e) {
                e.preventDefault();
                saveEstablishment();
            });
        });

        var map, pin, searchManager;

        function GetMap() {
            var initialLocation = new Microsoft.Maps.Location(-17.393525, -66.156801);
            map = new Microsoft.Maps.Map('#myMap', {
                credentials: 'ArQ2YhDzY85sAJsLwNVr-l2g0rU8A_brMU4FInQRfS3T6pX4ReAGGAWjZWGmYKPS',
                center: initialLocation,
                zoom: 12
            });

            Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
                searchManager = new Microsoft.Maps.Search.SearchManager(map);
            });

            Microsoft.Maps.Events.addHandler(map, 'dblclick', function (e) {
                if (e.location) {
                    addPinToMap(e.location);
                }
            });
        }

        function addPinToMap(location) {
            if (pin) {
                map.entities.remove(pin);
            }
            pin = new Microsoft.Maps.Pushpin(location, { title: 'Nueva ubicación' });
            map.entities.push(pin);

            $('#latitude').val(location.latitude);
            $('#longitude').val(location.longitude);
        }

        function searchLocation() {
            const searchTerm = $('#searchLocation').val().trim();

            if (!searchTerm) {
                Swal.fire({
                    icon: 'info',
                    title: 'Información',
                    text: 'Por favor ingresa una ubicación para buscar.',
                });
                return;
            }

            if (!searchManager) {
                Swal.fire({
                    icon: 'error',
                    title: '¡Error!',
                    text: 'El gestor de búsqueda no está disponible. Intenta nuevamente.',
                });
                return;
            }

            const requestOptions = {
                where: searchTerm + ", Cochabamba, Bolivia",
                callback: function (result) {
                    if (result && result.results && result.results.length > 0) {
                        const location = result.results[0].location;

                        map.setView({ center: location, zoom: 15 });
                        addPinToMap(location);

                        Swal.fire({
                            icon: 'success',
                            title: '¡Ubicación encontrada!',
                            text: `Ubicación: ${result.results[0].name}`,
                        });
                    } else {
                        Swal.fire({
                            icon: 'info',
                            title: 'Sin resultados',
                            text: 'No se encontraron resultados para la búsqueda.',
                        });
                    }
                },
                errorCallback: function () {
                    Swal.fire({
                        icon: 'error',
                        title: '¡Error!',
                        text: 'Error al buscar la ubicación. Intenta nuevamente.',
                    });
                }
            };

            searchManager.geocode(requestOptions);
        }

        $(document).ready(function () {
            $('#btnSearch').click(searchLocation);

            $('#searchLocation').keypress(function (e) {
                if (e.which === 13) {
                    e.preventDefault();
                    searchLocation();
                }
            });
        });
    </script>
}



