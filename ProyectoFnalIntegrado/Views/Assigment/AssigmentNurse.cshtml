@{
    ViewData["Title"] = "Asignaciones";
    Layout = "_Layout"; 
}
@section styles {
   
    <link rel="stylesheet" href="~/css/Assigment.css" />

}

<div class="wave-container">
    <div class="wave"></div>
    <div class="wave"></div>
    <div class="wave"></div>
</div>
<div id="formularioContainer" class="card shadow mb-4">
    <div class="card-header py-3" style="background-color: #7C2949;">
        <a href="#" id="btnAsignarUsuario" onclick="openDetail(null)" class="text-white">Asignar Usuario</a>
        <a href="#" id="btnDetalleUsuario" onclick="openForm(null)" class="text-white">Detalle Usuario</a>
    </div>
    <div class="card-body">
        <div class="row">

            <div class="col-12 col-md-6 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Detalles del Enfermero</h5>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Codigo:</span>
                            </div>
                            <input type="text" class="form-control" style="background-color: #F9F9F9;" id="txtcodeSedes">
                            <div class="input-group-append">
                                <button class="btn btn-secondary" id="btnbuscarlector" type="button" onclick="openModalNurse(null)">Buscar</button>
                            </div>
                        </div>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Datos:</span>
                            </div>
                            <input type="text" class="form-control" disabled="disabled" style="background-color: #F9F9F9" id="FullNameNurse">
                            <input type="text" class="form-control" disabled="disabled" style="background-color: #F9F9F9; display: none;" id="txtidNurse">
                        </div>
                        <div class="valid-feedback" id="nurseFeedback" style="display: none;">
                            <i class="bi bi-check-circle-fill text-success"></i> Asignación exitosa.
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-6 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Detalles del Establecimiento</h5>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Nombre:</span>
                            </div>
                            <input type="text" class="form-control" disabled="disabled" style="background-color: #F9F9F9" id="nameSchool">
                            <div class="input-group-append">
                                <button class="btn btn-secondary" id="searchSchool" onclick="openModalEstablecimiento(null)">Buscar</button>
                            </div>
                        </div>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Datos:</span>
                            </div>
                            <input type="text" class="form-control" disabled="disabled" style="background-color: #F9F9F9" id="txtInformation">
                            <input type="text" class="form-control" disabled="disabled" style="background-color: #F9F9F9; display: none;" id="txtidSchool">
                        </div>
                        <div class="valid-feedback" id="schoolFeedback" style="display: none;">
                            <i class="bi bi-check-circle-fill text-success"></i> Asignación exitosa.
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <!-- Tarjeta para Detalles de las Fechas -->
            <div class="col-12 col-md-6 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Detalles de las Fechas</h5>
                        <div class="row">
                            <div class="col-12 mb-3">
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Inicio:</span>
                                    <input type="date" class="form-control" id="txtstartDate" disabled>
                                    <div class="invalid-feedback" id="startDateError">Fecha de inicio requerida.</div>
                                    <div class="valid-feedback">
                                        <i class="bi bi-check-circle-fill text-success"></i> Fecha válida.
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 mb-3">
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Fin:</span>
                                    <input type="date" class="form-control" id="txtendDate" disabled>
                                    <div class="invalid-feedback" id="endDateError">Fecha de fin requerida.</div>
                                    <div class="valid-feedback">
                                        <i class="bi bi-check-circle-fill text-success"></i> Fecha válida.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Tarjeta para Detalles de las Horas -->
            <div class="col-12 col-md-6 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Detalles de las Horas</h5>
                        <div class="row">
                            <div class="col-12 mb-3">
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Hora Inicio:</span>
                                    <input type="time" class="form-control" id="txtstartTime" disabled>
                                    <div class="invalid-feedback" id="startTimeError">Hora de inicio requerida.</div>
                                    <div class="valid-feedback">
                                        <i class="bi bi-check-circle-fill text-success"></i> Hora válida.
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 mb-3">
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Hora Fin:</span>
                                    <input type="time" class="form-control" id="txtendTime" disabled>
                                    <div class="invalid-feedback" id="endTimeError">Hora de fin requerida.</div>
                                    <div class="valid-feedback">
                                        <i class="bi bi-check-circle-fill text-success"></i> Hora válida.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-12 text-center mb-3">
                <button id="btnregistrar" class="btn btn-success w-25" disabled>Registrar</button>
                <button class="btn btn-danger w-25 ml-4" id="btncancelarregistro" onclick="clearBtnCancel()">Cancelar</button>
            </div>
        </div>
    </div>
</div>


<!-- Nueva tarjeta para la tabla con filtro de fechas -->
<div class="d-flex justify-content-center" >
    <div class="row mb-3 align-items-end"  id="modalFiltro" style="display:none;">
      
        <div class="col-md-3">
            <label for="startDateFilter">Fecha de Inicio</label>
            <input type="date" id="startDateFilter" class="form-control">
        </div>

       
        <div class="col-md-3">
            <label for="endDateFilter">Fecha de Fin</label>
            <input type="date" id="endDateFilter" class="form-control">
        </div>

     
        <div class="col-md-3">
            <button id="btnFiltrar" class="btn btn-primary">Filtrar</button>
        </div>

        
        <div class="col-md-3">
            <button id="btnLimpiar" class="btn btn-secondary">Limpiar</button>
        </div>
    </div>
</div>

<!-- Nueva tarjeta para la tabla -->
<div id="detallesAsignacionCard" class="card shadow mb-4" style="display:none;">
    <div class="card-header py-3" style="background-color: #7C2949;">
        <a href="#" id="btnAsignarUsuario" onclick="openDetail(null)" class="text-white">Asignar Usuario</a>
        <a href="#" id="btnDetalleUsuario" onclick="openForm(null)" class="text-white">Detalle Usuario</a>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="tabla" class="table">
                <thead class="table-dark" style="background-color: #7C2949;">
                    <tr>
                        <th style="display:none;">idNurse</th>
                        <th style="display:none;">idSchool</th>
                        <th>Enfermero</th>
                        <th>Especialidad</th>
                        <th>Establecimiento</th>
                        <th>Fechas de Trabajo</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>
@* Tabla asignada para listar los Enfermeros *@
<div id="listNurse" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="exampleModalLabel">Lista de Usuarios</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table table-striped">
                    <table class="table table-bordered" id="tableNurse" style="width:100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th style="display:none;">>id</th>
                                <th>Codigo</th>
                                <th>Nombre Completo</th>
                                <th>Especialidad</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@* Tabla asignada para listar las Escuelas *@
<div id="listaEstablecimiento" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="exampleModalLabel">Lista de Establecimientos</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="tableSchool" style="width:100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th style="display:none;">id</th>
                                <th>Nombre</th>
                                <th>Zona</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal de reasignación -->
<div class="modal fade" id="ResignacionModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header text-white" style="background-color: #772b47;">
                <h5 class="modal-title">Formulario de Reasignación</h5>
                <button type="button" class="close" id="btnXCancel" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col">
                        <input type="text" id="txtidNurseR" class="form-control" style="display:none" disabled>
                        <input type="text" id="txtidNameNurseR" class="form-control" disabled>
                        <div class="invalid-feedback">Este campo es obligatorio.</div>
                        <div class="valid-feedback"><i class="bi bi-check-circle-fill text-success"></i> ¡Correcto!</div>
                    </div>
                    <div class="col">
                        <input type="text" id="txtCurrentSchoolIdR" class="form-control" style="display:none" disabled>
                        <input type="text" id="txtnameSchoolR" class="form-control" disabled>
                        <div class="invalid-feedback">Este campo es obligatorio.</div>
                        <div class="valid-feedback"><i class="bi bi-check-circle-fill text-success"></i> ¡Correcto!</div>
                    </div>
                </div>
                <!-- ComboBox para seleccionar la zona -->
                <h6 class="text-center">Seleccione la Zona</h6>
                <div class="form-group">
                    <select class="form-control" id="zonaSelect" onchange="loadSchoolsByZone()">
                        <option value="Todas" disabled selected>Seleccione</option>
                        <option value="Todas">Todas</option>
                        <option value="North Zone">North Zone</option>
                        <option value="East Zone">East Zone</option>
                        <option value="West Zone">West Zone</option>
                        <option value="South Zone">South Zone</option>
                        <option value="Central Zone">Central Zone</option>
                    </select>
                    <div class="invalid-feedback" id="ZonaError">Zona requerida.</div>
                    <div class="valid-feedback">
                        <i class="bi bi-check-circle-fill text-success"></i> Zona válida.
                    </div>
                </div>

                <h6 class="text-center">Seleccione la Escuela Nueva</h6>
                <div class="form-group">
                    <input type="text" id="txtidSchoolR" class="form-control" style="display:none;" disabled>
                    <select class="form-control" id="escuelaSelect" onchange="enableDateTimeFields()">
                        <option value="" disabled selected>Seleccione</option>
                        <!-- Aquí se llenarán las escuelas dependiendo de la zona seleccionada -->
                    </select>
                    <div class="invalid-feedback" id="EscuelaError">Escuela requerida.</div>
                    <div class="valid-feedback">
                        <i class="bi bi-check-circle-fill text-success"></i> Escuela válida.
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col">
                        <label for="fechaInicio" class="col-form-label">Fecha de Trabajo Inicio:</label>
                        <input type="date" class="form-control" id="txtstartDateR">
                        <div class="invalid-feedback" id="startDateErrorR">Hora de inicio requerida.</div>
                        <div class="valid-feedback">
                            <i class="bi bi-check-circle-fill text-success"></i> Hora válida.
                        </div>
                    </div>
                    <div class="col">
                        <label for="fechaFin" class="col-form-label">Fecha de Trabajo Fin:</label>
                        <input type="date" class="form-control" id="txtendDateR">
                        <div class="invalid-feedback" id="endDateErrorR">Fecha de fin requerida.</div>
                        <div class="valid-feedback">
                            <i class="bi bi-check-circle-fill text-success"></i> Fecha válida.
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col">
                        <label for="horaInicio" class="col-form-label">Hora de Trabajo Inicio:</label>
                        <input type="time" class="form-control" id="txtstartTimeR">
                        <div class="invalid-feedback" id="startTimeErrorR">Hora de inicio requerida.</div>
                        <div class="valid-feedback">
                            <i class="bi bi-check-circle-fill text-success"></i> Hora válida.
                        </div>
                    </div>
                    <div class="col">
                        <label for="horaFin" class="col-form-label">Hora de Trabajo Fin:</label>
                        <input type="time" class="form-control" id="txtendTimeR">
                        <div class="invalid-feedback" id="endTimeErrorR">Hora de fin requerida.</div>
                        <div class="valid-feedback">
                            <i class="bi bi-check-circle-fill text-success"></i> Hora válida.
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col text-left">
                        <button type="button" class="btn btn-secondary w-100" id="btnCancelRe" data-bs-dismiss="modal">Cancelar</button>
                    </div>
                    <div class="col text-right">
                        <button type="button" class="btn btn-primary w-100" id="btnSaveRegistreRe" disabled>Aceptar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Modal historico *@
<div class="modal fade" id="HistoryModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header text-white" style="background-color: #772b47;">
                <h5 class="modal-title">Formulario de Reasignación</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h6 class="text-center">Enfermero</h6>
                <div class="form-group row">
                    <div class="col text-center">
                        <input type="text" id="NurseNameHistory" class="form-control" disabled>
                    </div>
                </div>
                <h6 class="text-center">Historial de Asignaciones</h6>
                <table class="table table-bordered" id="nurseHistoryTable">
                    <thead>
                        <tr>
                            <th>Colegio</th>
                            <th>Fecha Inicio - Fin</th>
                            <th>Turno</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Aquí se llenarán los datos de las asignaciones del enfermero -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script>

        $(document).ready(function () {
           
            $('#txtstartDateR, #txtendDateR, #txtstartTimeR, #txtendTimeR').prop('disabled', true);

      
            function enableDateTimeFields() {
                const selectedZone = $('#zonaSelect').val();
                const selectedSchool = $('#escuelaSelect').val();

                
                if (!selectedZone) {
                    $('#ZonaError').text('Zona requerida.').show();
                    $('#zonaSelect').removeClass('is-valid').addClass('is-invalid');
                } else {
                    $('#ZonaError').hide();
                    $('#zonaSelect').removeClass('is-invalid').addClass('is-valid');
                }

     
                if (!selectedSchool) {
                    $('#EscuelaError').text('Escuela requerida.').show();
                    $('#escuelaSelect').removeClass('is-valid').addClass('is-invalid');
                } else {
                    $('#EscuelaError').hide();
                    $('#escuelaSelect').removeClass('is-invalid').addClass('is-valid');
                }

             
                if (selectedZone && selectedSchool) {
                    $('#txtstartDateR, #txtendDateR, #txtstartTimeR, #txtendTimeR').prop('disabled', false);
                } else {
                    $('#txtstartDateR, #txtendDateR, #txtstartTimeR, #txtendTimeR').prop('disabled', true);
                }
            }

        
            function validateFields() {
                let isValid = true;

               
                const today = new Date();
                today.setHours(0, 0, 0, 0); 

                
                const startDate = new Date($('#txtstartDate').val());
                if ($('#txtstartDateR').val() === '') {
                    $('#startDateErrorR').text('Fecha de inicio requerida.').show();
                    $('#txtstartDate').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else if (startDate < today) {
                    $('#startDateErrorR').text('La fecha de inicio no puede ser anterior al día actual.').show();
                    $('#txtstartDateR').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#startDateErrorR').hide();
                    $('#txtstartDateR').removeClass('is-invalid').addClass('is-valid');
                }

                const endDate = new Date($('#txtendDateR').val());
                if ($('#txtendDateR').val() === '') {
                    $('#endDateErrorR').text('Fecha de fin requerida.').show();
                    $('#txtendDateR').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else if (endDate < startDate) {
                    $('#endDateErrorR').text('La fecha de fin no puede ser anterior a la fecha de inicio.').show();
                    $('#txtendDateR').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else if (endDate.getTime() === startDate.getTime()) { 
                    $('#endDateErrorR').text('La fecha de fin no puede ser igual a la fecha de inicio.').show();
                    $('#txtendDateR').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#endDateErrorR').hide();
                    $('#txtendDateR').removeClass('is-invalid').addClass('is-valid');
                }

     
                const startTime = $('#txtstartTimeR').val();
                if (startTime === '') {
                    $('#startTimeErrorR').text('Hora de inicio requerida.').show();
                    $('#txtstartTimeR').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#startTimeErrorR').hide();
                    $('#txtstartTimeR').removeClass('is-invalid').addClass('is-valid');
                }

              
                const endTime = $('#txtendTimeR').val();
                if (endTime === '') {
                    $('#endTimeErrorR').text('Hora de fin requerida.').show();
                    $('#txtendTimeR').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
             
                    const [startHour, startMinute] = startTime.split(':').map(Number);
                    const [endHour, endMinute] = endTime.split(':').map(Number);

                    const startDateTime = new Date();
                    startDateTime.setHours(startHour, startMinute, 0, 0);

                    const endDateTime = new Date();
                    endDateTime.setHours(endHour, endMinute, 0, 0);

                
                    const fourHoursLater = new Date(startDateTime);
                    fourHoursLater.setHours(startHour + 4, startMinute);

                    console.log("Hora de inicio:", startDateTime);
                    console.log("Hora de fin:", endDateTime);
                    console.log("Hora de inicio + 4 horas:", fourHoursLater);

                    if (endDateTime < fourHoursLater) {
                        $('#endTimeErrorR').text('La hora de fin debe ser al menos 4 horas mayor que la hora de inicio.').show();
                        $('#txtendTimeR').removeClass('is-valid').addClass('is-invalid');
                        isValid = false;
                    } else if (endDateTime.getTime() === startDateTime.getTime()) { 
                        $('#endTimeErrorR').text('La hora de fin no puede ser igual a la hora de inicio.').show();
                        $('#txtendTimeR').removeClass('is-valid').addClass('is-invalid');
                        isValid = false;
                    } else {
                        $('#endTimeErrorR').hide();
                        $('#txtendTimeR').removeClass('is-invalid').addClass('is-valid');
                    }
                }

            
                $('#btnSaveRegistreRe').prop('disabled', !isValid);
            }

           
            $('#zonaSelect, #escuelaSelect').on('change', function () {
                enableDateTimeFields();
                validateFields(); 
            });

         
            $('#txtstartDateR, #txtendDateR, #txtstartTimeR, #txtendTimeR').on('input change', function () {
                validateFields();
            });
        });



        $('#ResignacionModal').on('hidden.bs.modal', function () {
            $('#txtstartDateR, #txtendDateR, #txtstartTimeR, #txtendTimeR').prop('disabled', true).val('');
            $('#startDateError, #endDateError, #startTimeError, #endTimeError').hide();
            $('#txtstartDateR, #txtendDateR, #txtstartTimeR, #txtendTime, #ZonaError, #EscuelaError').removeClass('is-invalid is-valid');
            $('#btnSaveRegistreRe').prop('disabled', true);
        });

    </script>
    <script>



        $(document).ready(function () {
           
            function validateFields() {
                let isValid = true;

                
                const today = new Date();
                today.setHours(0, 0, 0, 0);

               
                const startDate = new Date($('#txtstartDate').val());
                if ($('#txtstartDate').val() === '') {
                    $('#startDateError').text('Fecha de inicio requerida.').show();
                    $('#txtstartDate').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else if (startDate < today) {
                    $('#startDateError').text('La fecha de inicio no puede ser anterior al día actual.').show();
                    $('#txtstartDate').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#startDateError').hide();
                    $('#txtstartDate').removeClass('is-invalid').addClass('is-valid');
                }

             
                const endDate = new Date($('#txtendDate').val());
                if ($('#txtendDate').val() === '') {
                    $('#endDateError').text('Fecha de fin requerida.').show();
                    $('#txtendDate').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else if (endDate < startDate) {
                    $('#endDateError').text('La fecha de fin no puede ser anterior a la fecha de inicio.').show();
                    $('#txtendDate').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else if (endDate.getTime() === startDate.getTime()) { 
                    $('#endDateError').text('La fecha de fin no puede ser igual a la fecha de inicio.').show();
                    $('#txtendDate').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#endDateError').hide();
                    $('#txtendDate').removeClass('is-invalid').addClass('is-valid');
                }

              
                const startTime = $('#txtstartTime').val();
                if (startTime === '') {
                    $('#startTimeError').text('Hora de inicio requerida.').show();
                    $('#txtstartTime').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#startTimeError').hide();
                    $('#txtstartTime').removeClass('is-invalid').addClass('is-valid');
                }

                const endTime = $('#txtendTime').val();
                if (endTime === '') {
                    $('#endTimeError').text('Hora de fin requerida.').show();
                    $('#txtendTime').removeClass('is-valid').addClass('is-invalid');
                    isValid = false;
                } else {
                 
                    const [startHour, startMinute] = startTime.split(':').map(Number);
                    const [endHour, endMinute] = endTime.split(':').map(Number);

                    const startDateTime = new Date();
                    startDateTime.setHours(startHour, startMinute, 0, 0);

                    const endDateTime = new Date();
                    endDateTime.setHours(endHour, endMinute, 0, 0);

                   
                    const fourHoursLater = new Date(startDateTime);
                    fourHoursLater.setHours(startHour + 4, startMinute); 

                    console.log("Hora de inicio:", startDateTime);
                    console.log("Hora de fin:", endDateTime);
                    console.log("Hora de inicio + 4 horas:", fourHoursLater);

                    if (endDateTime < fourHoursLater) {
                        $('#endTimeError').text('La hora de fin debe ser al menos 4 horas mayor que la hora de inicio.').show();
                        $('#txtendTime').removeClass('is-valid').addClass('is-invalid');
                        isValid = false;
                    } else if (endDateTime.getTime() === startDateTime.getTime()) { 
                        $('#endTimeError').text('La hora de fin no puede ser igual a la hora de inicio.').show();
                        $('#txtendTime').removeClass('is-valid').addClass('is-invalid');
                        isValid = false;
                    } else {
                        $('#endTimeError').hide();
                        $('#txtendTime').removeClass('is-invalid').addClass('is-valid');
                    }
                }

                $('#btnregistrar').prop('disabled', !isValid);
            }

            $('#txtstartDate, #txtendDate, #txtstartTime, #txtendTime').on('input change', function () {
                validateFields();
            });
        });

        $(document).ready(function () {
            loadAssignedList();
            loadNurseList();
            loadSchoolList();


            function loadAssignedList() {
                $.ajax({
                    url: '/Assigment/GetNurseSchoolAssignments',
                    type: 'GET',
                    success: function (data) {
                        try {
                            data = typeof data === 'string' ? JSON.parse(data) : data;
                        } catch (e) {
                            showAlert("Error al procesar los datos de asignaciones.", false);
                            return;
                        }

                        if (!Array.isArray(data)) {
                            showAlert("Se esperaban datos válidos.", false);
                            return;
                        }

                       
                        data.reverse();

                        const startDateFilter = new Date($('#startDateFilter').val());
                        const endDateFilter = new Date($('#endDateFilter').val());

                      
                        $('#tabla tbody').empty();

                        data.forEach(function (assignment) {
                            var dateOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };
                            var startDate = new Date(assignment.Item6);
                            var endDate = assignment.Item7 ? new Date(assignment.Item7) : null;

                           
                            if ((!isNaN(startDateFilter.getTime()) && startDate < startDateFilter) ||
                                (!isNaN(endDateFilter.getTime()) && endDate > endDateFilter)) {
                                return;
                            }

                            var dateDisplay = startDate.toLocaleDateString('es-ES', dateOptions);
                            if (endDate) {
                                var endDateDisplay = endDate.toLocaleDateString('es-ES', dateOptions);
                                dateDisplay += ' - ' + endDateDisplay;
                            }

                            var row = `<tr>
                                    <td style="display:none;">${assignment.Item1}</td>
                                    <td style="display:none;">${assignment.Item2}</td>
                                    <td>${assignment.Item3}</td>
                                    <td>${assignment.Item4}</td>
                                    <td>${assignment.Item5}</td>
                                    <td>${dateDisplay}</td>
                                    <td><button class="btn-reasignar" data-id="${assignment.Item1}">Reasignar</button></td>
                                </tr>`;
                            $('#tabla tbody').append(row);
                        });

                        
                        $('#tabla tbody tr').dblclick(function () {
                            var idNurse = $(this).find('td:eq(0)').text();
                            var nurseName = $(this).find('td:eq(2)').text();
                            loadNurseHistoryAssignments(idNurse, nurseName);
                            $('#HistoryModal').modal('show');
                        });
                    },
                    error: function () {
                        showAlert("Error en la solicitud de asignaciones.", false);
                    }
                });
            }

           
            $('#btnFiltrar').on('click', function () {
                loadAssignedList();
            });

            $('#tabla').on('click', '.btn-reasignar', function () {
                var idNurse = $(this).closest('tr').find('td').eq(0).text(); 
                var idSchool = $(this).closest('tr').find('td').eq(1).text(); 
                var fullNameNurse = $(this).closest('tr').find('td').eq(2).text(); 
                var schoolName = $(this).closest('tr').find('td').eq(4).text(); 

               
                $('#txtidNurseR').val(idNurse);
                $('#txtCurrentSchoolIdR').val(idSchool);
                $('#txtidNameNurseR').val(fullNameNurse);
                $('#txtnameSchoolR').val(schoolName);
              
                $('#zonaSelect').empty().append(`
                            <option value="Todas" disabled selected>Seleccione</option>
                            <option value="Todas">Todas</option>
                            <option value="North Zone">North Zone</option>
                            <option value="East Zone">East Zone</option>
                            <option value="West Zone">West Zone</option>
                            <option value="South Zone">South Zone</option>
                            <option value="Central Zone">Central Zone</option>`
                );

            
                $('#escuelaSelect').empty().append('<option value="" disabled selected>Seleccione</option>');
                
                $('#ResignacionModal').modal('show');
            });

          

            function loadNurseList() {
                $.ajax({
                    url: '/Assigment/GetAllNurse',
                    type: 'GET',
                    success: function (data) {
                        try {
                            data = typeof data === 'string' ? JSON.parse(data) : data;
                        } catch (e) {
                            showAlert("Error al procesar los datos de enfermeros.", false);
                            return;
                        }

                        if (!Array.isArray(data)) {
                            showAlert("Se esperaban datos válidos.", false);
                            return;
                        }

                        $('#tableNurse tbody').empty();
                        data.forEach(function (assignment) {
                            var row = `<tr>
                                                <td style="display:none;">${assignment.Item1}</td>
                                                <td>${assignment.Item3}</td>
                                                <td>${assignment.Item2}</td>
                                                <td>${assignment.Item4}</td>
                                                <td><button class="btn-asignar" data-id="${assignment.Item1}" data-fullname="${assignment.Item2} (${assignment.Item4})" data-codesede="${assignment.Item3}">Asignar</button></td>
                                            </tr>`;
                            $('#tableNurse tbody').append(row);
                        });

                        
                        $('.btn-asignar').on('click', function () {
                            const nurseData = {
                                id: $(this).data('id'),
                                fullName: $(this).data('fullname'),
                                codeSede: $(this).data('codesede')
                            };
                            assignNurse(nurseData);
                        });
                    },
                    error: function () {
                        showAlert("Error en la solicitud de enfermeros.", false);
                    }
                });
            }

            function assignNurse(nurseData) {
                const { fullName } = nurseData;

                
                const fullNameNurseInput = document.getElementById("FullNameNurse");
                const txtCodeSedesInput = document.getElementById("txtcodeSedes");

                
                fullNameNurseInput.value = fullName;
                fullNameNurseInput.disabled = false; 
                fullNameNurseInput.classList.add("is-valid"); 

                
                const nurseFeedback = document.getElementById("nurseFeedback");
                nurseFeedback.style.display = "block"; 

                
                txtCodeSedesInput.value = nurseData.codeSede;
                txtCodeSedesInput.classList.add("is-valid"); 
            }

            function loadSchoolList() {
                $.ajax({
                    url: '/Assigment/GetAllSchools',
                    type: 'GET',
                    success: function (data) {
                        try {
                            data = typeof data === 'string' ? JSON.parse(data) : data;
                        } catch (e) {
                            showAlert("Error al procesar los datos de colegios.", false);
                            return;
                        }

                        if (!Array.isArray(data)) {
                            showAlert("Se esperaban datos válidos.", false);
                            return;
                        }

                        $('#tableSchool tbody').empty();
                        data.forEach(function (assignment) {
                            var row = `<tr>
                                            <td style="display:none;">${assignment.Item1}</td>
                                            <td>${assignment.Item2}</td>
                                            <td>${assignment.Item3}</td>
                                            <td>${assignment.Item4}</td>
                                            <td><button class="btn-asignarSchool" data-id="${assignment.Item1}" data-name="${assignment.Item2}" data-director="${assignment.Item4}" data-zone="${assignment.Item3}">Asignar</button></td>
                                        </tr>`;
                            $('#tableSchool tbody').append(row);
                        });

                       
                        $('.btn-asignarSchool').on('click', function () {
                            const schoolData = {
                                id: $(this).data('id'),
                                name: $(this).data('name'),
                                director: $(this).data('director'),
                                zone: $(this).data('zone')
                            };
                            assignSchool(schoolData);
                        });
                    },
                    error: function () {
                        showAlert("Error en la solicitud de colegios.", false);
                    }
                });

               
                function assignSchool(schoolData) {
                    const { name, director, zone } = schoolData;

                
                    const nameSchoolInput = document.getElementById("nameSchool");
                    const txtInformationInput = document.getElementById("txtInformation");

                    nameSchoolInput.value = name;
                    nameSchoolInput.disabled = false; 
                    nameSchoolInput.classList.add("is-valid");

                    txtInformationInput.value = `Director: ${director}, Zona: ${zone}`; 
                    txtInformationInput.disabled = false; 
                    txtInformationInput.classList.add("is-valid"); 

                    const schoolFeedback = document.getElementById("schoolFeedback");
                    schoolFeedback.style.display = "block"; 
                }

                
                $('#btnregistrar').on('click', function () {
                    console.log("Operación de asignación iniciada.");

                    const assignmentData = {
                        IdNurse: parseInt($('#txtidNurse').val(), 10), 
                        IdSchool: parseInt($('#txtidSchool').val(), 10), 
                        StartDate: $('#txtstartDate').val() + "T00:00:00", 
                        EndDate: $('#txtendDate').val() + "T00:00:00", 
                        StartTime: $('#txtstartTime').val() + ":00", 
                        EndTime: $('#txtendTime').val() + ":00" 
                    };

                    console.log("Datos de asignación:", assignmentData);

                    $.ajax({
                        url: '/Assigment/AssignNurseToSchool',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(assignmentData),
                        success: function (response) {
                            showAlert(response, true);
                            console.log("Asignación exitosa. Actualizando lista...");

                          
                            loadAssignedList();
                            clearBtnCancel();
                        },
                        error: function (xhr) {
                            showAlert(xhr.responseText || "Error en la asignación.", false);
                        }
                    });
                });

               
                function cleanReassignment() {
                    $('#txtidNurseR').val('');      
                    $('#txtidSchoolR').val('');      
                    $('#txtstartDateR').val('');     
                    $('#txtendDateR').val('');     
                    $('#txtstartTimeR').val('');    
                    $('#txtendTimeR').val('');       
                   
                    $('#zonaSelect').empty().append('<option value="Todas" disabled selected>Seleccione</option>');

                   
                    $('#escuelaSelect').empty().append('<option value="" disabled selected>Escuelas</option>');
                }

           
                $('#btnSaveRegistreRe').on('click', function () {
                    console.log("Operación de asignación iniciada.");

                 
                    const currentSchoolId = parseInt($('#txtCurrentSchoolIdR').val(), 10) || 0; 

                    const assignmentData = {
                        IdNurse: parseInt($('#txtidNurseR').val(), 10), 
                        IdSchool: parseInt($('#txtidSchoolR').val(), 10), 
                        StartDate: $('#txtstartDateR').val() + "T00:00:00", 
                        EndDate: $('#txtendDateR').val() + "T00:00:00",
                        StartTime: $('#txtstartTimeR').val() + ":00", 
                        EndTime: $('#txtendTimeR').val() + ":00" 
                    };

                    
                    const requestData = {
                        assignment: assignmentData,  
                        currentSchoolId: currentSchoolId 
                    };

                   
                    console.log("Datos de asignación:", requestData);

                    $.ajax({
                        url: '/Assigment/ReassignNurseToSchool',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(requestData), 
                        success: function (response) {
                            showAlert(response, true);
                            console.log("Asignación exitosa. Actualizando lista...");

                         
                            loadAssignedList();

                            
                            cleanReassignment();
                            
                            $('#ResignacionModal').modal('hide'); 
                        },
                        error: function (xhr) {
                            showAlert(xhr.responseText || "Error en la asignación.", false);
                        }
                    });

                });
            
                $('#ResignacionModal').on('hide.bs.modal', function () {
                    cleanReassignment()
                });



            }

            function clearFields(selectors) {
                selectors.forEach(function (selector) {
                    $(selector).val('');
                });
            }

          
            $('#btnbuscarlector').on('click', function () {
                clearFields(['#FullNameNurse', '#txtcodeSedes']);
                openModalNurse();
            });

          
            $('#searchSchool').on('click', function () {
                clearFields(['#nameSchool', '#txtInformation']);
                openModalEstablecimiento();
            });

            $('#tableNurse').on('click', '.btn-asignar', function () {
                var idNurse = $(this).data('id');
                var nurseFullName = $(this).data('fullname');
                var codeSede = $(this).data('codesede');

                $('#FullNameNurse').val(nurseFullName);
                $('#txtcodeSedes').val(codeSede);
                $('#txtidNurse').val(idNurse);
                checkFields(true, $('#nameSchool').val() !== '');
                closeModal();
            });

            $('#tableSchool').on('click', '.btn-asignarSchool', function () {
                var idSchool = $(this).data('id');
                var schoolName = $(this).data('name');
                var directorName = $(this).data('director');
                var zone = $(this).data('zone');

                $('#nameSchool').val(schoolName);
                $('#txtInformation').val(directorName + ' (' + zone + ')');
                $('#txtidSchool').val(idSchool);
                checkFields($('#FullNameNurse').val() !== '', true);
                closeModal();
            });

            $('.modal').on('click', function (e) {
                if ($(e.target).is('.modal')) {
                    $(this).modal('hide');

                }
            });

            $('#modalReasignar form').on('submit', function (e) {
                e.preventDefault();
                showAlert('Formulario enviado!', true);
                closeModal();
            });
        });

        function loadSchoolsByZone() {
            var selectedZone = $('#zonaSelect').val();

            $.ajax({
                url: '/Assigment/GetSchoolsByZone',
                type: 'GET',
                data: { zona: selectedZone }, 
                success: function (data) {
                    try {
                        data = typeof data === 'string' ? JSON.parse(data) : data;
                    } catch (e) {
                        showAlert("Error al procesar los datos de escuelas.", false);
                        return;
                    }

                    if (!Array.isArray(data)) {
                        showAlert("Se esperaban datos válidos.", false);
                        return;
                    }

                    $('#escuelaSelect').empty(); 
                    $('#escuelaSelect').append('<option value="" disabled selected>Escuelas</option>'); 

                    data.forEach(function (school) {
                        var row = `<option value="${school.Item1}">${school.Item2}</option>`; 
                        $('#escuelaSelect').append(row); 
                    });
                    
                    $('#escuelaSelect').change(function () {
                        var selectedSchoolId = $(this).val(); 
                        $('#txtidSchoolR').val(selectedSchoolId); 
                    });
                },
                error: function () {
                    showAlert("Error en la solicitud de escuelas.", false);
                }
            });
        }

        function loadNurseHistoryAssignments(idNurse, nurseName) {
            $.ajax({
                url: '/Assigment/GetNurseHistoryAssignments', 
                type: 'GET',
                data: { idNurse: idNurse }, 
                success: function (data) {
                    $('#NurseNameHistory').val(nurseName); 
                    try {

                        if (typeof data === 'string') {
                            data = JSON.parse(data);
                        }

                        var assignments = data; 
                        var tableBody = $('#nurseHistoryTable tbody');
                        tableBody.empty(); 

                        assignments.forEach(function (assignment) {
                        
                            var dateOptions = { year: 'numeric', month: '2-digit', day: '2-digit' };

                            var startDate = new Date(assignment.Item2).toLocaleDateString('es-ES', dateOptions); 
                            var endDate = new Date(assignment.Item3).toLocaleDateString('es-ES', dateOptions);  

                            var startTime = assignment.Item4.slice(0, 5); 
                            var endTime = assignment.Item4.slice(16, 24); 

                            var row = '<tr>' +
                                '<td>' + assignment.Item1 + '</td>' +
                                '<td>' + startDate + ' - ' + endDate + '</td>' +
                                '<td>' + startTime + '  ' + endTime + '</td>' +
                                '</tr>';

                            tableBody.append(row);
                        });
                    } catch (e) {
                        console.error("Error al procesar las asignaciones:", e);
                        showAlert("Error al procesar las asignaciones.", false);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error cargando asignaciones del enfermero:', error);
                    showAlert("Error al cargar las asignaciones del enfermero.", false);
                }
            });
        }
        $(document).ready(function () {
          
            $('.close').on('click', function () {
                $('#HistoryModal').modal('hide');
            });
        });



        function resetInput(inputSelector, errorSelector) {
            $(inputSelector).val(''); 
            $(inputSelector).removeClass('is-invalid is-valid'); 
            $(errorSelector).hide(); 
        }


        function clearNurseFields() {
            resetInput('#FullNameNurse', '#nurseFeedback');
            resetInput('#txtcodeSedes', '#nurseFeedback');
        }

        function clearSchoolFields() {
            resetInput('#nameSchool', '#schoolFeedback');
            resetInput('#txtInformation', '#schoolFeedback');
        }



        function openModalNurse() {
            $("#listNurse").modal("show");
            checkFields(false, $('#nameSchool').val() !== '');
            clearNurseFields();
            $('#txtidNurse').val(''); 
        }

        function openModalEstablecimiento() {
            $("#listaEstablecimiento").modal("show");
            checkFields($('#FullNameNurse').val() !== '', false);
            clearSchoolFields();
            $('#txtidSchool').val(''); 
        }

        function clearFields() {
            resetInput('#txtstartDate', '#startDateError');
            resetInput('#txtendDate', '#endDateError');
            resetInput('#txtstartTime', '#startTimeError');
            resetInput('#txtendTime', '#endTimeError');
        }





        
        function checkFields(isNurseComplete, isSchoolComplete) {
            if (!(isNurseComplete && isSchoolComplete)) {
                clearFields();  
            }

           
            $('#txtstartDate, #txtendDate, #txtstartTime, #txtendTime').prop('disabled', !(isNurseComplete && isSchoolComplete));
        }

        function showAlert(message, isSuccess) {
            var alertDiv = $('#dynamic-alert');
            alertDiv.removeClass('alert-danger alert-success');
            alertDiv.addClass(isSuccess ? 'alert-success' : 'alert-danger').show();
            $('#alert-message').text(message);

           
            setTimeout(function () {
                alertDiv.hide();
            }, 5000);
        }
        function openDetail(json) {
            $("#formularioContainer").show();
            $("#modalFiltro").hide();
            $("#detallesAsignacionCard").hide();

        }

        function openForm(json) {
            $("#formularioContainer").hide();
            $("#detallesAsignacionCard").show();
            $("#modalFiltro").show();

        }
        function closeModal() {
            $(".modal").modal("hide");
        }


        function clearBtnCancel() {
            clearFields(); 
            clearNurseFields(); 
            clearSchoolFields(); 
            $('#txtidNurse').val(''); 
            $('#txtidSchool').val(''); 

            $('#btnregistrar').prop('disabled', true);
        }
    </script>
}